$bg-checkered-fg: $gray-300 !default;
$inline-scroller-max-height: 125px !default;

// Autofit Row

$autofit-col-expand-min-width: 3.125rem !default; // 50px

$autofit-padded-col-padding-x: 0.5rem !default; // 8px
$autofit-padded-col-padding-y: 0.25rem !default; // 4px

$autofit-padded-no-gutters-sm: () !default;
$autofit-padded-no-gutters-sm: map-merge(
	(
		margin: -0.25rem,
		width: auto,
		autofit-col: (
			padding: 0.25rem,
		),
	),
	$autofit-padded-no-gutters-sm
);

// Close

$close-color: $gray-900 !default;
$close-font-size: calc(#{$font-size-base} * 1.5) !default;
$close-font-weight: $font-weight-bold !default;
$close-text-shadow: $c-unset !default;

$close: () !default;
$close: map-deep-merge(
	(
		align-items: center,
		appearance: none,
		background-color: var(--close-bg-color),
		background-image: var(--close-bg-image),
		border-radius: var(--close-border-radius, $border-radius-sm),
		border-width: var(--close-border-width, 0),
		color: var(--close-color, $close-color),
		cursor: $link-cursor,
		display: inline-flex,
		font-size: var(--close-font-size, 1rem),
		font-weight: var(--close-font-weight, $close-font-weight),
		height: var(--close-size, 2rem),
		justify-content: center,
		line-height: var(--close-line-height, 1),
		opacity: var(--close-opacity, 1),
		padding: var(--close-padding, 0),
		text-align: center,
		text-shadow: var(--close-text-shadow, $close-text-shadow),
		transition: var(--close-transition, #{color 0.15s ease-in-out,
			background-color 0.15s ease-in-out,
			border-color 0.15s ease-in-out,
			box-shadow 0.15s ease-in-out}),
		width: var(--close-width, 2rem),
		hover: (
			background-color: var(--close-hover-bg-color),
			background-image: var(--close-hover-bg-image),
			border-color: var(--close-hover-border-color),
			color: var(--close-hover-color, $gray-900),
			opacity: var(--close-hover-opacity, 1),
			outline: 0,
			text-decoration: none,
		),
		focus: (
			background-color: var(--close-hover-bg-color),
			background-image: var(--close-hover-bg-image),
			border-color: var(--close-hover-border-color),
			box-shadow: var(--close-focus-box-shadow, $component-focus-box-shadow),
			color: var(--close-hover-color, $gray-900),
			opacity: var(--close-hover-opacity, 0.75),
			outline: 0,
		),
		disabled: (
			background-color: var(--close-disabled-bg-color),
			background-image: var(--close-disabled-bg-image),
			border-color: var(--close-disabled-border-color),
			box-shadow: var(--close-disabled-box-shadow, none),
			color: var(--close-disabled-color, $gray-600),
			cursor: $disabled-cursor,
			opacity: 0.65,
			outline: 0,
			active: (
				pointer-events: none,
			),
		),
		lexicon-icon: (
			margin-top: 0,
		),
	),
	$close
);

// C Focus Inset

$c-focus-inset-focus: () !default;
$c-focus-inset-focus: map-deep-merge(
	(
		box-shadow: var(--component-focus-inset-box-shadow, $component-focus-inset-box-shadow),
		border-color: var(--component-focus-inset-border-color, $primary-l1),
		outline: 0,
	),
	$c-focus-inset-focus
);

// C Inner

$c-inner: () !default;
$c-inner: map-deep-merge(
	(
		align-items: inherit,
		display: inherit,
		flex-direction: inherit,
		height: inherit,
		justify-content: inherit,
		line-height: inherit,
		max-width: inherit,
		min-width: inherit,
		outline: 0,
		overflow: inherit,
		padding-bottom: inherit,
		padding-left: inherit,
		padding-right: inherit,
		padding-top: inherit,
		text-overflow: inherit,
		width: inherit,
	),
	$c-inner
);

// Heading

$heading-spacer-x: 1rem !default; // 16px

$heading-text-margin-bottom: auto !default;
$heading-text-margin-top: auto !default;

// Inline Item

$inline-item-lexicon-icon-margin-top: -0.1em !default;
$inline-item-spacer-x: 0.5rem !default; // 8px

$inline-item-loading-animation-font-size: 1.25em !default;

$page-header-bg: $white !default;

// Background

$bg-theme-colors: () !default;
$bg-theme-colors: map-deep-merge(
	(
		'primary': (
			background-color: var(--bg-primary-bg-color, $primary) !important,
			hover: (
				background-color: var(--bg-primary-hover-bg-color, $primary-d2) !important,
			),
		),
		'secondary': (
			background-color: var(--bg-secondary-bg-color, $secondary) !important,
			hover: (
				background-color: var(--bg-secondary-hover-bg-color, $secondary-d2) !important,
			),
		),
		'success': (
			background-color: var(--bg-success-bg-color, $success) !important,
			hover: (
				background-color: var(--bg-success-hover-bg-color, $success-d2) !important,
			),
		),
		'info': (
			background-color: var(--bg-info-bg-color, $info) !important,
			hover: (
				background-color: var(--bg-info-hover-bg-color, $info-d2) !important,
			),
		),
		'warning': (
			background-color: var(--bg-warning-bg-color, $warning) !important,
			hover: (
				background-color: var(--bg-warning-hover-bg-color, $warning-d2) !important,
			),
		),
		'danger': (
			background-color: var(--bg-danger-bg-color, $danger) !important,
			hover: (
				background-color: var(--bg-danger-hover-bg-color, $danger-d2) !important,
			),
		),
		'light': (
			background-color: var(--bg-light-bg-color, $light) !important,
			hover: (
				background-color: var(--bg-light-hover-bg-color, $light-d2) !important,
			),
		),
		'dark': (
			background-color: var(--bg-dark-bg-color, $dark) !important,
			hover: (
				background-color: var(--bg-dark-hover-bg-color, $dark-l1) !important,
			),
		),
		'white': (
			background-color: var(--bg-white-bg-color, $white) !important,
		),
		'transparent': (
			background-color: var(--bg-transparent-bg-color, transparent) !important,
		),
	),
	$bg-theme-colors
);

$bg-gradient-theme-colors: () !default;
$bg-gradient-theme-colors: map-deep-merge(
	(
		'primary': (
			background: $primary
				linear-gradient(
					180deg,
					clay-mix($body-bg, $primary, 15%),
					$primary
				)
				repeat-x !important,
		),
		'secondary': (
			background: $secondary
				linear-gradient(
					180deg,
					clay-mix($body-bg, $secondary, 15%),
					$secondary
				)
				repeat-x !important,
		),
		'success': (
			background: $success
				linear-gradient(
					180deg,
					clay-clay-mix($body-bg, $success, 15%),
					$success
				)
				repeat-x !important,
		),
		'info': (
			background: $info
				linear-gradient(180deg, clay-mix($body-bg, $info, 15%), $info)
				repeat-x !important,
		),
		'warning': (
			background: $warning
				linear-gradient(
					180deg,
					clay-mix($body-bg, $warning, 15%),
					$warning
				)
				repeat-x !important,
		),
		'danger': (
			background: $danger
				linear-gradient(
					180deg,
					clay-mix($body-bg, $danger, 15%),
					$danger
				)
				repeat-x !important,
		),
		'light': (
			background: $light
				linear-gradient(180deg, clay-mix($body-bg, $light, 15%), $light)
				repeat-x !important,
		),
		'dark': (
			background: $dark
				linear-gradient(180deg, clay-mix($body-bg, $dark, 15%), $dark)
				repeat-x !important,
		),
	),
	$bg-gradient-theme-colors
);

// Border

$border-theme-colors: () !default;
$border-theme-colors: map-deep-merge(
	(
		'primary': (
			border-color: var(--border-primary-border-color, $primary) !important,
		),
		'secondary': (
			border-color: var(--border-secondary-border-color, $secondary) !important,
		),
		'success': (
			border-color: var(--border-success-border-color, $success) !important,
		),
		'info': (
			border-color: var(--border-info-border-color, $info) !important,
		),
		'warning': (
			border-color: var(--border-warning-border-color, $warning) !important,
		),
		'danger': (
			border-color: var(--border-danger-border-color, $danger) !important,
		),
		'light': (
			border-color: var(--border-light-border-color, $light) !important,
		),
		'dark': (
			border-color: var(--border-dark-border-color, $dark) !important,
		),
		'white': (
			border-color: var(--border-white-border-color, $white) !important,
		),
	),
	$border-theme-colors
);

// Display

$displays: none, inline, inline-block, block, table, table-row, table-cell, flex,
	inline-flex !default;

// Overflow

$overflows: auto, hidden !default;

// Position

$positions: static, relative, absolute, fixed, sticky !default;

// Font Sizes

$font-sizes: () !default;
$font-sizes: map-deep-merge(
	(
		text-1: (
			font-size: var(--text-1-font-size, map-get($font-scale, 1)),
		),
		text-2: (
			font-size: var(--text-2-font-size, map-get($font-scale, 2)),
		),
		text-3: (
			font-size: var(--text-3-font-size, map-get($font-scale, 3)),
		),
		text-4: (
			font-size: var(--text-4-font-size, map-get($font-scale, 4)),
		),
		text-5: (
			font-size: var(--text-5-font-size, map-get($font-scale, 5)),
		),
		text-6: (
			font-size: var(--text-6-font-size, map-get($font-scale, 6)),
		),
		text-7: (
			font-size: var(--text-7-font-size, map-get($font-scale, 7)),
		),
		text-8: (
			font-size: var(--text-8-font-size, map-get($font-scale, 8)),
		),
		text-9: (
			font-size: var(--text-9-font-size, map-get($font-scale, 9)),
		),
		text-10: (
			font-size: var(--text-10-font-size, map-get($font-scale, 10)),
		),
		text-11: (
			font-size: var(--text-11-font-size, map-get($font-scale, 11)),
		),
	),
	$font-sizes
);

// Text

$text-theme-colors: () !default;
$text-theme-colors: map-deep-merge(
	(
		'primary': (
			color: var(--text-primary-color, $primary !important),
			hover: (
				color: var(--text-primary-hover-color, $primary-d2 !important),
			),
		),
		'secondary': (
			color: var(--text-secondary-color, $secondary !important),
			hover: (
				color: var(--text-secondary-hover-color, $secondary-d2 !important),
			),
		),
		'success': (
			color: var(--text-success-color, $success !important),
			hover: (
				color: var(--text-success-hover-color, $success-d2 !important),
			),
		),
		'info': (
			color: var(--text-info-color, $info) !important,
			hover: (
				color: var(--text-info-hover-color, $info-d2) !important,
			),
		),
		'warning': (
			color: var(--text-warning-color, $warning) !important,
			hover: (
				color: var(--text-warning-hover-color, $warning-d2) !important,
			),
		),
		'danger': (
			color: var(--text-danger-color, $danger) !important,
			hover: (
				color: var(--text-danger-hover-color, $danger-d2) !important,
			),
		),
		'light': (
			color: var(--text-light-color, $light) !important,
			hover: (
				color: var(--text-light-hover-color, $light-d2) !important,
			),
		),
		'dark': (
			color: var(--text-dark-color, $dark) !important,
			hover: (
				color: var(--text-dark-hover-color, $dark-l2) !important,
			),
		),
		'body': (
			color: var(--text-body-color, map-get($c-body, color)) !important,
		),
		'muted': (
			color: var(--text-muted-color, $text-muted) !important,
		),
		'black-50': (
			color: var(--text-black-50-color, rgba(var(--black-values), 0.5)) !important,
		),
		'white-50': (
			color: var(--text-white-50-color, rgba(var(--white-values), 0.5)) !important,
		),
	),
	$text-theme-colors
);
